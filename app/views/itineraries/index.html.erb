<% content_for :body_class, 'offwhite-background' %>

<h1>Mazes</h1>




<style>
.mapboxgl-popup {
  max-width: 400px;
  font: 12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif;
}
body { margin:0; padding:0; }
#map { position:relative; height:600px; width: 100%; }
</style>



<div class="col-md-12">
  <div id='map'></div>
</div>

<script>
  mapboxgl.accessToken = 'pk.eyJ1Ijoia2V2aW5zY2hhZmZ0ZXIiLCJhIjoiY2piNm96NGt2MHZxZTJ3bXo3bG5uN2RwMiJ9.mJexXrURcgBO8qfnCsoYkQ';

  var map = new mapboxgl.Map({
    container: 'map',
    style: 'mapbox://styles/mapbox/streets-v9',
    center: [<%= @itineraries.first.locations.first.longitude %>, <%= @itineraries.first.locations.first.latitude %>],
    zoom: 11.15
  });

  map.scrollZoom.disable();

  map.on('load', function() {

    // Add a layer showing the places.
    map.addLayer({
      "id": "places",
      "type": "symbol",
      "source": {
        "type": "geojson",
        "data": {
          "type": "FeatureCollection",
          "features": [

          {

            <% @itineraries.each do |itinerary| %>

            "type": "Feature",
            "properties": {
              "description": "<strong><%= itinerary.title %></strong><p><%= itinerary.description %> </p>",
              "icon": "theatre"
            },
            "geometry": {
              "type": "Point",
              "coordinates": [<%= itinerary.locations.first.longitude %>, <%= itinerary.locations.first.latitude %>]
            },

            <% end %>
          }
          ]
        }
      },
      "layout": {
        "icon-image": "star-15",
        "icon-size": 1.5,
        "icon-allow-overlap": true
      }
    });

    // When a click event occurs on a feature in the places layer, open a popup at the
        // location of the feature, with description HTML from its properties.
        map.on('click', 'places', function (e) {
          new mapboxgl.Popup()
          .setLngLat(e.features[0].geometry.coordinates)
          .setHTML(e.features[0].properties.description)
          .addTo(map);
        });

        // Change the cursor to a pointer when the mouse is over the places layer.
        map.on('mouseenter', 'places', function () {
          map.getCanvas().style.cursor = 'pointer';
        });

        // Change it back to a pointer when it leaves.
        map.on('mouseleave', 'places', function () {
          map.getCanvas().style.cursor = '';
        });
      });
    </script>




    <div class="row">
      <%= render @itineraries %>
    </div>

