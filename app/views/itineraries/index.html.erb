<% content_for :body_class, 'offwhite-background' %>

<h1>Mazes</h1>




<style>
.mapboxgl-popup {
  max-width: 700px;
  font: 12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif;
}
body { margin:0; padding:0; }
#map { position:relative; height:500px; width: 100%; }
</style>



<div class="col-md-12 map-index">
  <div id='map'></div>
</div>

<script>

<% if @itineraries.any? %>
  var lng = <%= @itineraries.first.locations.first.longitude %>;
  var lat = <%= @itineraries.first.locations.first.latitude %>;
<% else %>
  var lng = 25.75791;
  var lat = -80.2007997;
<% end %>


  mapboxgl.accessToken = 'pk.eyJ1Ijoia2V2aW5zY2hhZmZ0ZXIiLCJhIjoiY2piNm96NGt2MHZxZTJ3bXo3bG5uN2RwMiJ9.mJexXrURcgBO8qfnCsoYkQ';

  var map = new mapboxgl.Map({
    container: 'map',
    style: 'mapbox://styles/mapbox/streets-v9',
    center: [lng, lat],
    zoom: 11.15
  });

  map.scrollZoom.disable();

  map.on('load', function() {


    map.loadImage('images/location-pin.png', function(error, image) {
      if (error) throw error;
      map.addImage('cat', image);

      map.addLayer({
        "id": "places",
        "type": "symbol",
        "source": {
          "type": "geojson",
          "data": {
            "type": "FeatureCollection",
            "features": [

              <% @itineraries.each do |itinerary| %>
                {

                  "type": "Feature",
                  "properties": {
                    "description": "<strong><%= itinerary.title %></strong><p><%= itinerary.description %> </p> <a class=\"btn-floating btn-sm btn-deep-orange\" href=\"<%= itinerary_path(itinerary) %>\">GO</a>",
                    "icon": "cat"
                  },
                  "geometry": {
                    "type": "Point",
                    "coordinates": [<%= itinerary.locations.first.longitude %>, <%= itinerary.locations.first.latitude %>]
                  },

                },
              <% end %>
            ]
          }
        },
        "layout": {
          "icon-image": "{icon}",
          "icon-size": 0.6,
          "icon-allow-overlap": true
        }
      });

      map.addControl(new mapboxgl.NavigationControl());


      map.addControl(new mapboxgl.GeolocateControl({
          positionOptions: {
              enableHighAccuracy: true
          },
          trackUserLocation: true
      }));

    // When a click event occurs on a feature in the places layer, open a popup at the
        // location of the feature, with description HTML from its properties.
        map.on('click', 'places', function (e) {
          new mapboxgl.Popup()
          .setLngLat(e.features[0].geometry.coordinates)
          .setHTML(e.features[0].properties.description)
          .addTo(map);
        });

        // Change the cursor to a pointer when the mouse is over the places layer.
        map.on('mouseenter', 'places', function () {
          map.getCanvas().style.cursor = 'pointer';
        });

        // Change it back to a pointer when it leaves.
        map.on('mouseleave', 'places', function () {
          map.getCanvas().style.cursor = '';
        });
      });
  });
  
</script>

  <%#= form_tag(itineraries_path, :method=>:get) do %>
   <%#= select_tag "neighborhood_id", options_from_collection_for_select(Neighborhood.all, 'id', 'name', (nil)), {:prompt => 'Select Neighborhood' }, {:class=>"mdb-select colorful-select dropdown-primary", searchable: 'Search here..' } %>
   <%#= submit_tag 'Search', class: 'btn btn-md btn-primary' %>
  <%# end %> 


 <%#= f.select "neighborhood_id", options_from_collection_for_select(Neighborhood.all, 'id', 'name', (nil)), {:prompt => 'Select Neighborhood' }, {:class=>"mdb-select colorful-select dropdown-primary", searchable: 'Search here..' } %>


<div class="row inineraries-index-container">
  <%= render @itineraries %>
</div>

