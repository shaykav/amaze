<div class="jumbo-container">
  <div class="row mb-5">
    <div class="col-md-12">
      <div class="maze-intro-header">
        <div class="text-white text-center d-flex align-items-center rgba-stylish-light py-5 px-4">
          <div class="py-5 home-jumbo">
            <h2 class="card-title pt-3 mb-5 font-bold jumbo-header"><%= @itinerary.title %></h2>
            <div class="home-container">
              <p class="px-5 pb-4 jumbo-subtext"><%= @itinerary.description %></p>
              <%= link_to "Enter Maze", @itinerary, class: "btn btn-secondary" %>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<head>
<style>
.accordion {
    background-color: #eee;
    color: #444;
    cursor: pointer;
    padding: 18px;
    width: 100%;
    border: none;
    text-align: left;
    outline: none;
    font-size: 15px;
    transition: 0.4s;
}

.active, .accordion:hover {
    background-color: #ccc;
}

.panel {
    padding: 0 18px;
    display: none;
    background-color: white;
}
</style>
</head>
<body>

  <h3>Reviews</h3>
  <p><%= 'no reviews yet' if @itinerary.reviews.empty? %></p>
  <% @itinerary.reviews.each do |review| %>
    <p>
      <%= review.body %>
      <br>
      Added on: <%= review.created_at %>
    </p>
  <% end %>

<button class="accordion">Write a Review</button>

<div class="panel">
  <p>
    <div class="New Review">
       New Review
    </div>
    <div class="review_form">

    <%= render "reviews/form" %>
  </div>
 </p>
</div>


<script>
var acc = document.getElementsByClassName("accordion");
var i;

for (i = 0; i < acc.length; i++) {
    acc[i].addEventListener("click", function() {
        this.classList.toggle("active");
        var panel = this.nextElementSibling;
        if (panel.style.display === "block") {
            panel.style.display = "none";
        } else {
            panel.style.display = "block";
        }
    });
}
</script>

</body>

<div class="intro-container">
  <h1 class="maze-intro-title"><%= @itinerary.title %></h1>
  <hr>
  <br>
  <p><%= @itinerary.description %></p>

  <%= link_to "Enter Maze", @itinerary, class: "btn btn-secondary" %>

</div>

  <div id='map' class="intro-map"></div>


<div class="row">
  <% @itinerary.locations.each do |location| %>
  <div class="col-md-4">
    <%= image_tag location.photo %>
  </div>

  <% end %>
</div>

<script>

  mapboxgl.accessToken = 'pk.eyJ1Ijoia2V2aW5zY2hhZmZ0ZXIiLCJhIjoiY2piNm96NGt2MHZxZTJ3bXo3bG5uN2RwMiJ9.mJexXrURcgBO8qfnCsoYkQ';

  var map = new mapboxgl.Map({
    container: 'map',
    style: 'mapbox://styles/mapbox/streets-v10',
    center: [<%= (@itinerary.locations.first.longitude).to_f %>, <%= (@itinerary.locations.first.latitude).to_f %>],
    zoom: 13
  });

  map.on('load', function() {
    getRoute();
  });

  function getRoute() {
    var start = [<%= (@itinerary.locations.first.longitude).to_f %>, <%= (@itinerary.locations.first.latitude).to_f %>];
    var end = [<%= (@itinerary.locations.last.longitude).to_f %>, <%= (@itinerary.locations.last.latitude).to_f %>];
    var directionsRequest = 'https://api.mapbox.com/directions/v5/mapbox/walking/' + start[0] + ',' + start[1] + ';' + end[0] + ',' + end[1] + '?geometries=geojson&access_token=' + mapboxgl.accessToken;


    $.ajax({
      method: 'GET',
      url: directionsRequest,
    }).done(function(data) {
      var route = data.routes[0].geometry;
      map.addLayer({
        id: 'route',
        type: 'line',
        source: {
          type: 'geojson',
          data: {
            type: 'Feature',
            geometry: route
          }
        },
        paint: {
          'line-width': 2
        }
      });

      map.addLayer({
        id: 'start',
        type: 'circle',
        source: {
          type: 'geojson',
          data: {
            type: 'Feature',
            geometry: {
              type: 'Point',
              coordinates: start
            }
          }
        }
      });
      map.addLayer({
        id: 'end',
        type: 'circle',
        source: {
          type: 'geojson',
          data: {
            type: 'Feature',
            geometry: {
              type: 'Point',
              coordinates: end
            }
          }
        }
      });

    });
  }

</script>
