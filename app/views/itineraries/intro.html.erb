<% content_for :body_class, 'offwhite-background' %>

<div class="view hm-black-light jarallax maze-intro-header" style="background: url('<%=@itinerary.image.url%>');" data-jarallax='{"speed": 0.2}' >
  <div class="full-bg-img">
    <div class="container flex-center header-desc">
      <div class="row pt-5 mt-3">
        <div class="col-md-12">
          <div class="text-center">
            <h1 class="h1-reponsive white-text font-up font-bold mb-3 wow fadeInDown" data-wow-delay="0.3s"><strong><%= @itinerary.title %></strong></h1>
            <hr class="hr-light mt-4 wow fadeInDown" data-wow-delay="0.4s">
            <h5 class="mb-5 white-text wow fadeInDown" data-wow-delay="0.4s"><strong><%= @itinerary.description %></strong></h5>
            <div class="star-pad text-center">
              <% if current_user %>
                <%= link_to_toggle_itinerary_favorite(@itinerary, current_user) %>
              <% else %>
                <%= link_to user_session_path do %>
                  <i class="fa fa-star-o star-redirect" aria-hidden="true"></i>
                <% end %>
              <% end %>
            </div>
            <script>
              //console.log('hello world');
              var colorClasses = {
                    Favorited: 'fa fa-star',
                    notFavorited: 'fa fa-star-o',
                  },
                  _classes = Object.values(colorClasses).join(' ');
                  $('#fav_button').click(() => {
                    $("#fav_button").toggleClass(_classes);
                  });

            </script>
            <%= link_to 'Enter Maze', itinerary_path(@itinerary), class: "btn btn-lg btn-deep-orange btn-rounded wow fadeInDown" %>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>


<div class="route-header text-center">
  <h1><%= @itinerary.neighborhood.name %> Route</h1>
  <div id="steps"></div>
</div>

<div class="maze-intro-container">
  <div id='map' class="intro-map"></div>

  <div class="col-md-6 mx-auto">

    <h3>Reviews</h3>
    <hr>
    <p><%= 'No reviews yet' if @itinerary.reviews.empty? %></p>
    <% @itinerary.reviews.each do |review| %>
    <p>
      <div class="user-email">
       <%= review.user.email %>:
      </div>
      <div class="review-body">
        <%= review.body %>
      </div>

      <div class="time-ago">
        Reviewed <%= time_ago_in_words(review.created_at)%> ago
      </div>

      <% if current_user and review.user_id == current_user.id %>
        <%= link_to edit_review_path(review) do %>
          <i class="fa fa-pencil" aria-hidden="true"></i>
        <% end %>

        <%= link_to review, method: :delete, data: { confirm: 'Are you sure?' } do %>
          <i class="fa fa-trash" aria-hidden="true"></i>
        <% end %>
      <% end %>

    </p>
    <% end %>

    <div class="review_accordian">

      <button class="accordion">Write a Review</button>
      <div class="panel">
        <p>
          <div class="review_form">
            <%= render "reviews/form", review: @itinerary.reviews.new %>
          </div>
        </p>
      </div>

    </div>
  </div>



  <h1>Route Photos</h1>
  <hr>

  <div class="row">
    <% @itinerary.locations.each do |location| %>
    <div class="col-md-4">
      <%= image_tag location.photo, width: '100%', class: "maze-photos" %>
    </div>

    <% end %>
  </div>
</div>


<script>


  mapboxgl.accessToken = 'pk.eyJ1Ijoia2V2aW5zY2hhZmZ0ZXIiLCJhIjoiY2piNnNkMmQ2OTBiZzMzcnpzM252OGttdSJ9.vp7HQwPNr--uNONxICdJzg';

  var map = new mapboxgl.Map({
    container: 'map',
    style: 'mapbox://styles/mapbox/streets-v9',
    center: [<%= @itinerary.locations.first.longitude %>, <%= @itinerary.locations.first.latitude %>],
    zoom: 12,
    bearing: 1,
    pitch: 1
  });

  // Adds route layer to map

  map.on('load', function() {

    getRoute();

    var layers = map.getStyle().layers;

    var labelLayerId;
    for (var i = 0; i < layers.length; i++) {
      if (layers[i].type === 'symbol' && layers[i].layout['text-field']) {
        labelLayerId = layers[i].id;
        break;
      }
    }

    map.addLayer({
      'id': '3d-buildings',
      'source': 'composite',
      'source-layer': 'building',
      'filter': ['==', 'extrude', 'true'],
      'type': 'fill-extrusion',
      'minzoom': 15,
      'paint': {
        'fill-extrusion-color': '#aaa',

                // use an 'interpolate' expression to add a smooth transition effect to the
                // buildings as the user zooms in
                'fill-extrusion-height': [
                "interpolate", ["linear"], ["zoom"],
                15, 0,
                15.05, ["get", "height"]
                ],
                'fill-extrusion-base': [
                "interpolate", ["linear"], ["zoom"],
                15, 0,
                15.05, ["get", "min_height"]
                ],
                'fill-extrusion-opacity': .6
              }
            }, labelLayerId);


  });



  function getRoute() {

    var start = [<%= (@itinerary.locations.first.longitude).to_f %>, <%= (@itinerary.locations.first.latitude).to_f %>];
    var end = [<%= (@itinerary.locations.last.longitude).to_f %>, <%= (@itinerary.locations.last.latitude).to_f %>];


    var directionsRequest = 'https://api.mapbox.com/optimized-trips/v1/mapbox/walking/' +
    <% location_size = @itinerary.locations.size %>
    <% @itinerary.locations.each_with_index do |location, ix| %>
    '<%=location.longitude%>' + ',' + '<%=location.latitude%><%= (ix + 1 == location_size) ? "" : ";" %>' +
    <% end %>  '?geometries=geojson' + '&steps=true&source=first&destination=last&roundtrip=false' + '&access_token=' + mapboxgl.accessToken;

    console.log(directionsRequest)


    $.ajax({
      method: 'GET',
      url: directionsRequest,
    }).done(function(data) {
      var route = data.trips[0].geometry.coordinates;
      var steps = Math.ceil(data.trips[0].distance)

      $('#steps').append(`<h4 class="steps-number-intro"> ${steps} Steps </h4>`);

      console.log(steps)

      map.addLayer({
        "id": "route",
        "type": "line",
        "source": {
          "type": "geojson",
          "data": {
            "type": "Feature",
            "properties": {},
            "geometry": {
              "type": "LineString",
              "coordinates": route
            }
          }
        },
        "layout": {
          "line-join": "round",
          "line-cap": "round"
        },
        "paint": {
          "line-color": "#3498db",
          "line-width": 5
        }
      });
    });

    map.addLayer({
      id: 'start',
      type: 'circle',
      source: {
        type: 'geojson',
        data: {
          type: 'Feature',
          geometry: {
            type: 'Point',
            coordinates: start
          }
        }
      }
    });

    map.addLayer({
      id: 'end',
      type: 'circle',
      source: {
        type: 'geojson',
        data: {
          type: 'Feature',
          geometry: {
            type: 'Point',
            coordinates: end
          }
        }
      }
    });
  }


</script>






<script>
  var acc = document.getElementsByClassName("accordion");
  var i;

  for (i = 0; i < acc.length; i++) {
    acc[i].addEventListener("click", function() {
      this.classList.toggle("active");
      var panel = this.nextElementSibling;
      if (panel.style.display === "block") {
        panel.style.display = "none";
      } else {
        panel.style.display = "block";
      }
    });
  }
</script>
